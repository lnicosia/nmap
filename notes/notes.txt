# Host netcat server
$ nc -l 127.0.0.1 -p 4242 -v -k

# Error
$ sudo ./ft_nmap scanme.org 4242
$ sudo nmap -p 4242 scanme.org
--------------------------------
Should be filtered

# Filter a port
$ sudo /sbin/iptables -A INPUT -p tcp --destination-port 4241 -j DROP

# SYN scan timeout
$ grep -nr "select" notes/strace.txt
select(5, [4], [4], [4], {tv_sec=1, tv_usec=533000})

# destination display before exiting
# leak g_data.destination in ft_strdup->parse_nmap_options

# match nmap port state when invalid packet

# Data structure

struct t_data {
	unsigned long long	opt;
	struct s_ip			*ips;
};

struct s_ip {
	struct sockaddr_in	*saddr; /* sockaddr_in of source */
	struct sockaddr_in	*daddr; /* sockaddr_in of dest */
	char				*destination; /* user input */
	int					status; /* [UP/DOWN] */
	struct s_port		*scans; /* list of ports to scan along with the type of scan */
	struct s_ip			*next; /* next ip */
};

struct s_port {
	int					scantype; /* Type of scan */
	int					status; /* Current status [READY/SCANNING/OPEN/CLOSED/FILTERED] */
	char				*service /* Found service */
	uint16_t			sport; /* Source port */
	uint16_t			dport; /* Destination port */
	struct s_port		*next; /* Next scan */
};

# Main thread reads scan list and redistributes tasks to workers
# When a worker is done, it sends the result to the main thread

www.google.com:
22  SYN     | 22  XMAS  | 22  UDP   | 23  SYN
 [SCANNING]    [OPEN]      [CLOSED]     [READY]

127.0.0.1:
22  SYN     | 22  XMAS  | 22  UDP   | 23  SYN
 [SCANNING]    [OPEN]      [CLOSED]     [READY]

./ft_nmap localhost -p 22 --scan=SYN,,FIN

ip.txt = 127.0.0.1
		 www.google.com

./ft_nmap localhost --file ip.txt -p 22 --scan=SYN,FIN

127.0.0.1 -> www.google.com

1 - 1024

min = 1
max = 1024

# nmap multiple ports (not range) handling ?
./ft_nmap localhsot -p 22,4242

# Print packet stderr
# Color reset after packets
# Makefile counter
